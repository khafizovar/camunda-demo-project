---
apiVersion: v1
kind: Service
metadata:
  name: SERVICENAME
  namespace: NAMESPACE_ENV
spec:
  selector:
    app: SERVICENAME
  ports:
    - name: http
      protocol: TCP
      port: SERVICE_PORT
      targetPort: http

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: SERVICENAME
  namespace: NAMESPACE_ENV
  labels:
    app: SERVICENAME
  annotations:
    ci.innopolis.ru/System.TeamFoundationCollectionUri: "SYSTEM_TEAMFOUNDATIONCOLLECTIONURI"
    ci.innopolis.ru/System.TeamProject: "SYSTEM_TEAMPROJECT"
    ci.innopolis.ru/Build.Repository.Name: "BUILD_REPOSITORYNAME"
    ci.innopolis.ru/Build.SourceVersion: "BUILD_SOURCEVERSION"
    ci.innopolis.ru/Build.BuildId: "BUILD_BUILDID"
    ci.innopolis.ru/Build.SourceBranchName: "BUILD_SOURCEBRANCHNAME"
    ci.innopolis/Release.ReleaseWebURL: "RELEASE_RELEASEWEBURL"
    ci.innopolis.ru/Release.ReleaseName: "RELEASE_RELEASENAME"
    ci.innopolis.ru/Release.AttemptNumber: "RELEASE_ATTEMPTNUMBER"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: SERVICENAME
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: SERVICENAME
    spec:
      containers:
      - name: SERVICENAME
        image: DOCKER_IMAGE:IMAGE_TAG
        imagePullPolicy: Always
        ports:
          - name: http
            containerPort: SERVICE_PORT
        env:
          - name: DEPLOYID
            value: "DEPLOYID_ENV"
          - name: ENVIRONMENT
            value: "ENVIRONMENT_ENV"

---
apiVersion: v1
kind: Service
metadata:
  name: SERVICENAME-expose
  namespace: NAMESPACE_ENV
spec:
  selector:
    app: SERVICENAME
  type: NodePort
  ports:
    - protocol: TCP
      port: SERVICE_PORT
      targetPort: SERVICE_PORT
      nodePort: NODE_PORT
